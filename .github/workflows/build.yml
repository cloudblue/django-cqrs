name: Build Django CQRS

on:
  push:
    branches: "*"
    tags:
      - '*'

  pull_request:
    branches: [ master ]

jobs:
  build_3_6_7_django_3_1:
    name: Build on Python 3.6 and 3.7 and django 3.1
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/dev.txt
        pip install -r requirements/test.txt
        pip install pytest-cov
        pip install django==3.1.*
    - name: Linting
      run: |
        flake8
    - name: Testing
      run: |
        python setup.py test
    - name: Integration tests
      run: |
        ./travis_integration_tests.sh
    - name: Compatibility tests
      run: |
        ./travis_compat_tests.sh
  build_3_8_django_1_11:
    name: Build on Python 3.8 django 1.11
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.8 ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/dev.txt
          pip install -r requirements/test.txt
          pip install pytest-cov
          pip install django==1.11.*
      - name: Linting
        run: |
          flake8
      - name: Testing
        run: |
          python setup.py test
      - name: Integration tests
        run: |
          ./travis_integration_tests.sh
      - name: Compatibility tests
        run: |
          ./travis_compat_tests.sh
  build_3_8_django_2_2:
    name: Build on Python 3.8 django 2.2
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.8 ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/dev.txt
          pip install -r requirements/test.txt
          pip install pytest-cov
          pip install django==2.2.*
      - name: Linting
        run: |
          flake8
      - name: Testing
        run: |
          python setup.py test
      - name: Integration tests
        run: |
          ./travis_integration_tests.sh
      - name: Compatibility tests
        run: |
          ./travis_compat_tests.sh
  build_3_8_django_3_1:
    name: Build on Python 3.8 django 3.1
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.8 ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/dev.txt
          pip install -r requirements/test.txt
          pip install pytest-cov
          pip install django==3.1.*
      - name: Linting
        run: |
          flake8
      - name: Testing
        run: |
          python setup.py test
      - name: Integration tests
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          INTEGRATION_TESTS: yes
        run: |
          ./travis_integration_tests.sh
      - name: Compatibility tests
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          COMPAT_TESTS: yes
        run: |
          ./travis_compat_tests.sh
      - name: Fix coverage report for Sonar
        run: |
          sed -i 's/\/home\/runner\/work\/django-cqrs\/django-cqrs\//\/github\/workspace\//g' coverage.xml
      - name: SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}